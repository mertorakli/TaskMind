rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow public access to pending_users collection for registration
    match /pending_users/{email} {
      allow read, write;
    }
    
    // Allow users to read and write their own documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admin users can read all user documents
      allow read: if request.auth != null && 
                  exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'system_admin';
    }
    
    // Calendar items rules
    match /calendarItems/{itemId} {
      // Users can only read their own calendar items
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Users can only create items for themselves
      allow create: if request.auth != null && 
                     request.auth.uid == request.resource.data.userId && 
                     validCalendarItem();
      
      // Users can only update or delete their own items
      allow update, delete: if request.auth != null && 
                             request.auth.uid == resource.data.userId;
      
      // Validation function for calendar items
      function validCalendarItem() {
        return request.resource.data.title != null && 
               request.resource.data.title is string &&
               request.resource.data.title.size() > 0 &&
               request.resource.data.start != null &&
               request.resource.data.end != null &&
               request.resource.data.type != null;
      }
    }
    
    // Default rule - deny all other requests
    match /{document=**} {
      allow read, write: if false;
    }
  }
}